<?php

namespace Inky\CourseBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * CourseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourseRepository extends EntityRepository
{
	public function getCourses($nbPerPage, $page)
	{
		if ((int) $page < 1) 
		{
			throw new \InvalidArgumentException('L\'argument $page ne peut etre inferieur a  1 (valeur : "'.$page.'").');
		}
		
		$query = $this->createQueryBuilder('c')
		->leftJoin('c.image', 'i')
			->addSelect('i')
		->leftJoin('c.tags', 'tags')
			->addSelect('tags')
		->where('c.isPublic = 1')
		->orderBy('c.date', 'DESC')
		->getQuery();
		
		$query->setFirstResult(($page-1) * $nbPerPage) ->setMaxResults($nbPerPage);
		return new Paginator($query);
	}
	
	public function searchCourse($search)
	{
		$query = $this	->createQueryBuilder('c')
						->select('DISTINCT c')
						->leftJoin('c.tags', 'tags')
							->addSelect('tags');
		$result = $query->where($query->expr()->ORx(	$query->expr()->LIKE('tags.tagLabel', ':search'),
														$query->expr()->LIKE('c.title', ':search'))
								)
						->setParameter('search','%'.$search.'%')
						->getQuery()
						->getResult();
		return $result;
	}
}
