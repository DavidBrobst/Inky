<?php

namespace Inky\CourseBundle\Entity\Course;

use Doctrine\ORM\EntityRepository;

/**
 * CourseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourseRepository extends EntityRepository
{
	public function getCourses($filter, $userId, $nbCourse, $fromCourse = 0)
	{
		// We select courses
		$query = $this->createQueryBuilder('c');
		
		// Learn Filter, different User / Public Status
		if ($filter === 'learn') 
			$query = $query	->where('c.isPublic = 1')->andwhere('c.user != '.$userId);

		// Teach Filter, Same User 
		// needs differentiation on the rendered page, non public should be higlighted
		elseif ($filter === 'teach') 
			$query = $query ->where('c.user = '.$userId);

		// End of Query
		$query = $query	->orderBy('c.date', 'DESC')
						->setMaxResults( $nbCourse )
						->setFirstResult( $fromCourse )

						->getQuery()
						->getResult();
				
		return $query;
	}
	
	public function countCourses($filter, $userId)
	{
		$query = $this	->createQueryBuilder('c')
						->select('count(c.id)');
						
		if ($filter === 'learn') 
			$query = $query	->where('c.isPublic = 1')->andwhere('c.user != '.$userId);
		
		elseif ($filter === 'teach') 
			$query = $query ->where('c.user = '.$userId);
		
		$query = $query	->getQuery()
						->getSingleScalarResult();
		return $query;
	}
	
	public function searchCourse($search)
	{
		$query = $this	->createQueryBuilder('c')
							->select('DISTINCT c')
						->leftJoin('c.tags', 'tags')
							->addSelect('tags');
		$result = $query->where($query->expr()->ORx(	$query->expr()->LIKE('tags.tagLabel', ':search'),
														$query->expr()->LIKE('c.title', ':search'))
								)
						->setParameter('search','%'.$search.'%')
						->getQuery()
						->getResult();
		return $result;
	}
}
